---
#
# Trusted Profile Analyzer (Trustification)
#
trustedProfileAnalyzer:
  # Controls whether the Trusted Profile Analyzer (Trustification) is enabled,
  # which includes the deployment of the application components, and the Keycloak
  # Realm import.
  enabled: true
  # Trustification's "appDomain" attribute.
  appDomain: __OVERWRITE_ME__
  # TPA Keycloak Realm import configuration.
  keycloakRealmImport:
    # Enables the Keycloak Realm import.
    enabled: true
    # Keycloak's CRD instance namespace and name. The local cluster instance where
    # this Realm will be imported.
    keycloakCR:
      namespace: __OVERWRITE_ME__
      name: __OVERWRITE_ME__
    # Realm's name for Trusted Profile Analyzer (Trustification).
    realm: chicken
    displayName: Trusted Content
    # Realm's role names.
    roles:
      - &chickenAdmin chicken-admin
      - &chickenUser chicken-user
      - &chickenManager chicken-manager
    # Realm's admin user.
    admin:
      # Stored in the Secret below as "username".
      username: *chickenAdmin
      # Creates a Secret with the admin user password (using the key "password"),
      # or uses the it's payload when already created.
      secretName: &realmAdminSecretName tpa-realm-chicken-admin
    # List of domain prefixes to create the redirect URIs for the frontend OIDC
    # client, this slice is combined with ".trustification.appDomain".
    redirectURIsPrefixes:
      - console
      - sbom
      - vex
    # Name of the Secret generated with the enabled OIDC clients secrets, each
    # client key on the ".client" object will become a Secret key.
    oidcClientsSecretName: &oidcClientsSecretName tpa-chicken-realm-oidc-clients
    # List of Realm clients.
    clients:
      walker:
        enabled: true
        clientId: walker
        defaultClientScopesExtra:
          - create:document
          - delete:document
          - create.sbom
        roles:
          - *chickenManager
      testingManager:
        enabled: true
        clientId: testing-manager
        defaultClientScopesExtra:
          - create:document
          - delete:document
        roles:
          - *chickenManager
      testingUser:
        enabled: true
        clientId: testing-user
        roles:
          - *chickenUser
#
# Trustification
#   https://github.com/trustification/trustification
#
trustification:
  appDomain: __OVERWRITE_ME__
  replicas: 1
  rust:
    logFilter: debug
    backtrace: true
  openshift:
    useServiceCa: true
  ingress:
    className: openshift-default
  guac:
    database:
      sslMode: disable
      name:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: dbname
      host:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: host
      port:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: port
      username:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: user
      password:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: password
    initDatabase:    
      sslMode: disable
      name:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: dbname
      host:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: host
      port:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: port
      username:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: user
      password:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: password
  storage:
    endpoint: __OVERWRITE_ME__
    accessKey:
      valueFrom:
        secretKeyRef:
          name: __OVERWRITE_ME__
          key: username
    secretKey:
      valueFrom:
        secretKeyRef:
          name: __OVERWRITE_ME__
          key: password
  eventBus:
    type: kafka
    bootstrapServers: tpa-kafka-bootstrap
    config:
      mechanism: SCRAM-SHA-512
      securityProtocol: SASL_PLAINTEXT
      username: __OVERWRITE_ME__
      password:
        valueFrom:
          secretKeyRef:
            name: __OVERWRITE_ME__
            key: password
  oidc:
    issuerUrl: __OVERWRITE_ME__
    clients:
      walker:
        clientId: walker
        clientSecret:
          valueFrom:
            secretKeyRef:
              name: *oidcClientsSecretName
              key: clientSecret
      #
      # TODO: DISABLE TESTING!!
      #
      testingUser:
        clientId: testing-user
        insecure: false
        clientSecret:
          valueFrom:
            secretKeyRef:
              name: *oidcClientsSecretName
              key: testingUser
      testingManager:
        clientId: testing-manager
        insecure: false
        clientSecret:
          valueFrom:
            secretKeyRef:
              name: *oidcClientsSecretName
              key: testingManager
  modules:
    bombasticWalker:
      sources:
        redhat:
          url: https://access.redhat.com/security/data/sbom/beta/
          signingKeyUrl: https://access.redhat.com/security/data/97f5eac4.txt#77E79ABE93673533ED09EBE2DCE3823597F5EAC4
          acceptV3Signatures: true
          fixLicenses: true
          job:
            schedule: "0 * * * *"
    vexinationWalker:
      sources:
        redhat:
          url: https://www.redhat.com/.well-known/csaf/provider-metadata.json
          acceptV3Signatures: true
          ignoreDistributions:
            - https://access.redhat.com/security/data/csaf/v2/advisories/
          job:
            schedule: "0 * * * *"
