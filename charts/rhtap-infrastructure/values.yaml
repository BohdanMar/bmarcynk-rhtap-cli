---
infrastructure:
  kafkas:
    tpa:
      enabled: false
      namespace: __OVERWRITE_ME__
      replicas: 1
      # Username for the Kafka user, which will generate a Secret, with the same
      # name, containing the password.
      username: __OVERWRITE_ME__
      # Group ID the Kafka consumers will be using, it's added on the topics ACL
      # to allow the group ID to access the topics.
      groupID: group
      version: 3.6.0
      config:
        default.replication.factor: 1
        inter.broker.protocol.version: '3.6'
        min.insync.replicas: 1
        offsets.topic.replication.factor: 1
        transaction.state.log.min.isr: 1
        transaction.state.log.replication.factor: 1
      kafkaStorage:
        type: persistent-claim
        size: 1Gi
      zookeeperStorage:
        type: persistent-claim
        size: 500Mi
      topics: []
        # - name: topics
        #   config:
        #     retention.ms: 604800000
        #   partitions: 1
        #   replicas: 1
  minIOTentants:
    tpa:
      enabled: false
      namespace: __OVERWRITE_ME__
      rootSecretName: tpa-minio-root-env
      storageUserSecretName: tpa-minio-user-env
      tlsSecretName: &minioTLSSecretName tpa-minio-svc-tls
      # service:
      #   annotations:
      #     service.beta.openshift.io/serving-cert-secret-name: *minioTLSSecretName
  postgresClusters:
    keycloak:
      enabled: false
      namespace: __OVERWRITE_ME__
      postgresVersion: 14
      pgbackrestConfig:
        repo1-retention-full: "3"
      backupRepos:
        - name: repo1
          volume:
            volumeClaimSpec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 500Mi
      instances:
        - replicas: 1
          dataVolumeClaimSpec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 500Mi
    guac:
      enabled: false
      namespace: __OVERWRITE_ME__
      postgresVersion: 14
      pgbackrestConfig:
        repo1-retention-full: "3"
      backupRepos:
        - name: repo1
          volume:
            volumeClaimSpec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 500Mi
      instances:
        - replicas: 1
          dataVolumeClaimSpec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 500Mi
      patroni:
        dynamicConfiguration:
          postgresql:
            pg_hba:
              - host all all 0.0.0.0/0 scram-sha-256
              - host all all ::1/128 scram-sha-256
